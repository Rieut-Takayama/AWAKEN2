name: Deploy to Google Cloud Run

on:
  push:
    branches:
      - main
      - production
  pull_request:
    branches:
      - main

env:
  PROJECT_ID: awaken2-project
  SERVICE_NAME: awaken2-backend
  REGION: asia-northeast1

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: backend/package-lock.json
    
    - name: Install dependencies
      working-directory: ./backend
      run: npm ci
    
    - name: Run linter
      working-directory: ./backend
      run: npm run lint --if-present
    
    - name: Run tests
      working-directory: ./backend
      env:
        DATABASE_URL: ${{ secrets.DATABASE_URL }}
        JWT_SECRET: ${{ secrets.JWT_SECRET }}
        MEXC_API_KEY: ${{ secrets.MEXC_API_KEY }}
        MEXC_API_SECRET: ${{ secrets.MEXC_API_SECRET }}
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        REDIS_URL: ${{ secrets.REDIS_URL }}
        ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
        NODE_ENV: test
      run: npm test --if-present
    
    - name: Build
      working-directory: ./backend
      run: npm run build

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/production'
    
    steps:
    - uses: actions/checkout@v3
    
    - id: 'auth'
      name: 'Authenticate to Google Cloud'
      uses: 'google-github-actions/auth@v1'
      with:
        credentials_json: '${{ secrets.GCP_SA_KEY }}'
    
    - name: 'Set up Cloud SDK'
      uses: 'google-github-actions/setup-gcloud@v1'
    
    - name: 'Configure Docker'
      run: gcloud auth configure-docker
    
    - name: 'Build and Push Container'
      working-directory: ./backend
      run: |
        gcloud builds submit \
          --tag gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE_NAME }}:${{ github.sha }}
    
    - name: 'Deploy to Cloud Run'
      run: |
        gcloud run deploy ${{ env.SERVICE_NAME }} \
          --image gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE_NAME }}:${{ github.sha }} \
          --region ${{ env.REGION }} \
          --platform managed \
          --allow-unauthenticated \
          --set-env-vars="NODE_ENV=production" \
          --set-env-vars="APP_NAME=AWAKEN2" \
          --set-env-vars="APP_VERSION=${{ github.sha }}" \
          --set-env-vars="TRIAL_KEYS=${{ secrets.TRIAL_KEYS }}" \
          --set-env-vars="JWT_SECRET=${{ secrets.JWT_SECRET }}" \
          --set-env-vars="JWT_EXPIRES_IN=24h" \
          --set-env-vars="DATABASE_URL=${{ secrets.DATABASE_URL }}" \
          --set-env-vars="DB_NAME=awaken2_db" \
          --set-env-vars="MEXC_API_KEY=${{ secrets.MEXC_API_KEY }}" \
          --set-env-vars="MEXC_API_SECRET=${{ secrets.MEXC_API_SECRET }}" \
          --set-env-vars="MEXC_BASE_URL=https://api.mexc.com" \
          --set-env-vars="TELEGRAM_BOT_TOKEN=${{ secrets.TELEGRAM_BOT_TOKEN }}" \
          --set-env-vars="TELEGRAM_CHAT_ID=${{ secrets.TELEGRAM_CHAT_ID }}" \
          --set-env-vars="ANTHROPIC_API_KEY=${{ secrets.ANTHROPIC_API_KEY }}" \
          --set-env-vars="REDIS_URL=${{ secrets.REDIS_URL }}" \
          --set-env-vars="REDIS_PORT=6379" \
          --set-env-vars="CORS_ORIGIN=https://awaken2-frontend.web.app" \
          --set-env-vars="BCRYPT_SALT_ROUNDS=12" \
          --set-env-vars="UPDATE_INTERVAL=5000" \
          --set-env-vars="SCORE_THRESHOLD_DEFAULT=75" \
          --set-env-vars="NOTIFICATION_INTERVAL_DEFAULT=60"
    
    - name: 'Show Service URL'
      run: |
        echo "Service deployed to:"
        gcloud run services describe ${{ env.SERVICE_NAME }} \
          --region ${{ env.REGION }} \
          --format="value(status.url)"